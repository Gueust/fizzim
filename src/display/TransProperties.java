package display;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.LinkedList;
import java.util.Vector;

import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;
import javax.swing.table.TableColumn;

import attributes.EnumVisibility;
import attributes.ObjAttribute;
import entities.StateObj;
import entities.StateTransitionObj;
import entities.TransitionObj;

class TransProperties extends javax.swing.JDialog {

  TransitionObj trans;
  DrawArea drawArea;
  StateObj start;
  StateObj end;
  StateObj pref;
  Vector<StateObj> stateObjs;
  boolean loopback = false;
  boolean stub = false;
  LinkedList<LinkedList<ObjAttribute>> globalList;
  Component window = this;
  JColorChooser colorChooser;

  /** Creates new form TransP */
  public TransProperties(DrawArea DA, java.awt.Frame parent, boolean modal,
      TransitionObj t, Vector<StateObj> states, boolean b, StateObj state) {
    super(parent, modal);
    trans = t;
    drawArea = DA;
    stateObjs = states;
    loopback = b;
    pref = state;
    globalList = drawArea.getGlobalList();
    colorChooser = drawArea.getColorChooser();
    if (trans.getType() == 1)
    {
      StateTransitionObj t1 = (StateTransitionObj) t;
      stub = t1.getStub();
    }

    initComponents();
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // GEN-BEGIN:initComponents
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
  private void initComponents() {
    TPLabel = new javax.swing.JLabel();
    TPScroll = new javax.swing.JScrollPane();
    TPTable = new javax.swing.JTable();
    TPNew = new javax.swing.JButton();
    TPDelete = new javax.swing.JButton();
    TPCancel = new javax.swing.JButton();
    TPOK = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox();
    jComboBox2 = new javax.swing.JComboBox();
    jCheckBox1 = new javax.swing.JCheckBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setResizable(true);
    if (!loopback)
    {
      setTitle("Edit State Transition Properties");
      TPLabel.setText("Edit the properties of the selected state transition:");
    }
    else
    {
      setTitle("Edit Loopback Transition Properties");
      TPLabel
          .setText("Edit the properties of the selected loopback transition:");
    }
    TPTable.setModel(new MyTableModel(trans, this, globalList, 4));
    TPTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

    // use dropdown boxes
    String[] options = new String[] { "No", "Yes", "Only non-default" };
    TableColumn column = TPTable.getColumnModel().getColumn(2);
    column.setCellEditor(new MyJComboBoxEditor(options));

    column = TPTable.getColumnModel().getColumn(5);
    column.setPreferredWidth(TPTable.getRowHeight());
    column.setCellEditor(new MyJColorEditor(colorChooser));
    column.setCellRenderer(new MyJColorRenderer());
    TPNew.setVisible(false);
    TPDelete.setVisible(false);

    TPScroll.setViewportView(TPTable);

    TPNew.setText("New");
    TPNew.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TPNewActionPerformed(evt);
      }
    });

    TPDelete.setText("Delete");
    TPDelete.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TPDeleteActionPerformed(evt);
      }
    });

    TPCancel.setText("Cancel");
    TPCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TPCancelActionPerformed(evt);
      }
    });

    TPOK.setText("OK");
    TPOK.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TPOKActionPerformed(evt);
      }
    });

    if (!loopback)
    {
      jLabel1.setText("Start State:");
      jLabel2.setText("End State:");
    }
    else
    {
      jLabel1.setText("State:");
      jLabel2.setVisible(false);
      jCheckBox1.setVisible(false);
    }

    jLabel3.setPreferredSize(new Dimension(50, 20));
    jLabel3.setMinimumSize(new Dimension(50, 20));
    jLabel3.setOpaque(true);
    jLabel3.setVisible(true);

    // set background color to color of transition and add action listener
    jLabel3.setBackground(trans.getColor());
    jLabel3.setBorder(new LineBorder(Color.black, 1));
    jLabel3.addMouseListener(new MouseListener() {

      ActionListener colorSel = new ActionListener() {
        public void actionPerformed(ActionEvent arg0) {
          jLabel3.setBackground(colorChooser.getColor());
          trans.setColor(colorChooser.getColor());
        }
      };

      public void mouseClicked(MouseEvent e)
      {
        JDialog dialog;
        dialog = JColorChooser.createDialog(window, "Choose Color", true,
            colorChooser, colorSel, null);
        dialog.setVisible(true);
      }

      public void mouseEntered(MouseEvent e) {
      }

      public void mouseExited(MouseEvent e) {
      }

      public void mousePressed(MouseEvent e) {
      }

      public void mouseReleased(MouseEvent e) {
      }
    });

    int size = stateObjs.size();

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(stateObjs));
    if (trans.getStartState() == null)
    {

      if (!loopback)
      {
        jComboBox1.setSelectedIndex(size - 2);
        start = stateObjs.get(size - 2);
      }
      else
      {
        if (pref == null)
        {
          jComboBox1.setSelectedIndex(size - 1);
          start = stateObjs.get(size - 1);
        }
        else
        {
          int index = 0;
          for (int i = 0; i < stateObjs.size(); i++)
          {
            if (stateObjs.get(i).equals(pref))
            {
              index = i;
              break;
            }
          }
          jComboBox1.setSelectedIndex(index);
          start = pref;
        }

      }

    }
    else
    {
      start = trans.getStartState();
      jComboBox1.setSelectedIndex(stateObjs.indexOf(start));
    }
    if (!loopback)
    {
      jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(stateObjs));
      if (trans.getEndState() == null)
      {
        jComboBox2.setSelectedIndex(size - 1);
        end = stateObjs.get(size - 1);
      }
      else
      {
        end = trans.getEndState();
        jComboBox2.setSelectedIndex(stateObjs.indexOf(end));
      }
    }
    else
      jComboBox2.setVisible(false);

    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        StartStateActionPerformed(evt);
      }
    });

    if (!loopback)
    {
      jComboBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          EndStateActionPerformed(evt);
        }
      });
    }

    if (!loopback)
    {
      jCheckBox1.setText("Stub?");
      jCheckBox1.setSelected(stub);
      jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0,
          0, 0));
      jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
    }

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
        getContentPane());
    getContentPane().setLayout(layout);
    layout
        .setHorizontalGroup(layout
            .createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING)
            .add(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .add(
                        layout
                            .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                            .add(
                                TPScroll,
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                480,
                                Short.MAX_VALUE)
                            .add(TPLabel)
                            .add(
                                layout
                                    .createSequentialGroup()
                                    .add(
                                        layout
                                            .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.TRAILING,
                                                false)
                                            .add(
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        jLabel2)
                                                    .addPreferredGap(
                                                        org.jdesktop.layout.LayoutStyle.RELATED,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)
                                                    .add(
                                                        jComboBox2,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(
                                                org.jdesktop.layout.GroupLayout.LEADING,
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        jLabel1)
                                                    .addPreferredGap(
                                                        org.jdesktop.layout.LayoutStyle.RELATED,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)
                                                    .add(
                                                        jComboBox1,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(
                                                org.jdesktop.layout.GroupLayout.LEADING,
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        TPNew)
                                                    .addPreferredGap(
                                                        org.jdesktop.layout.LayoutStyle.RELATED)
                                                    .add(
                                                        TPDelete)))
                                    .add(
                                        layout
                                            .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        240,
                                                        240,
                                                        240)
                                                    .add(
                                                        TPOK)
                                                    .addPreferredGap(
                                                        org.jdesktop.layout.LayoutStyle.RELATED)
                                                    .add(
                                                        TPCancel))
                                            .add(
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        42,
                                                        42,
                                                        42)
                                                    .add(
                                                        jLabel3))
                                            .add(
                                                layout
                                                    .createSequentialGroup()
                                                    .add(
                                                        42,
                                                        42,
                                                        42)
                                                    .add(
                                                        jCheckBox1)))))
                    .addContainerGap()));
    layout
        .setVerticalGroup(layout
            .createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING)
            .add(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .add(TPLabel)
                    .addPreferredGap(
                        org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(
                        TPScroll,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                        151,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(
                        org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(
                        layout
                            .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(TPNew).add(
                                TPDelete))
                    .add(22, 22, 22)
                    .add(
                        layout
                            .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(
                                jComboBox1,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3)
                    )
                    .add(
                        layout
                            .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                            .add(
                                layout
                                    .createSequentialGroup()
                                    .addPreferredGap(
                                        org.jdesktop.layout.LayoutStyle.RELATED,
                                        11,
                                        Short.MAX_VALUE)
                                    .add(
                                        layout
                                            .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(
                                                TPCancel)
                                            .add(
                                                TPOK))
                                    .addContainerGap())
                            .add(
                                layout
                                    .createSequentialGroup()
                                    .addPreferredGap(
                                        org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(
                                        layout
                                            .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(
                                                jLabel2)
                                            .add(
                                                jComboBox2,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jCheckBox1))
                                    .addContainerGap()))));
    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void StartStateActionPerformed(ActionEvent evt) {
    JComboBox cb = (JComboBox) evt.getSource();
    StateObj selState = (StateObj) cb.getSelectedItem();
    start = selState;

  }

  private void EndStateActionPerformed(ActionEvent evt) {
    JComboBox cb = (JComboBox) evt.getSource();
    StateObj selState = (StateObj) cb.getSelectedItem();
    end = selState;
  }

  // GEN-FIRST:event_TPCancelActionPerformed
  private void TPCancelActionPerformed(java.awt.event.ActionEvent evt) {
    drawArea.cancel();
    dispose();
  }// GEN-LAST:event_TPCancelActionPerformed

  // GEN-FIRST:event_TPOKActionPerformed
  private void TPOKActionPerformed(java.awt.event.ActionEvent evt) {
    TPTable.editCellAt(0, 0);
    if (drawArea.checkTransNames())
    {
      if (!loopback)
      {
        if (start != end)
          trans.initTrans(start, end);
        boolean b = jCheckBox1.isSelected();
        if (b != stub)
        {
          if (trans.getType() == 1)
          {
            StateTransitionObj t1 = (StateTransitionObj) trans;
            t1.setStub(b);
          }
        }

        if (start != end)

        {

          drawArea.commitUndo();
          dispose();
        }
        else
        {
          JOptionPane.showMessageDialog(this,
              "'Start State' and 'End State' must be different.",
              "error",
              JOptionPane.ERROR_MESSAGE);
        }
      }
      else
      {
        trans.initTrans(start);
        drawArea.commitUndo();
        dispose();
      }
    }
    else
    {
      JOptionPane.showMessageDialog(this,
          "Two different transitions cannot have the same name.",
          "error",
          JOptionPane.ERROR_MESSAGE);
    }
  }// GEN-LAST:event_TPOKActionPerformed

  // GEN-FIRST:event_TPDeleteActionPerformed
  private void TPDeleteActionPerformed(java.awt.event.ActionEvent evt) {
    // delete selected rows
    int[] rows = TPTable.getSelectedRows();
    for (int i = rows.length - 1; i > -1; i--)
    {
      int type = trans.getAttributeList().get(rows[i]).getEditable(0);
      if (type != ObjAttribute.GLOBAL_FIXED && type != ObjAttribute.ABS)
      {
        trans.getAttributeList().remove(rows[i]);
        TPTable.revalidate();
      }
      else
      {
        JOptionPane.showMessageDialog(this,
            "Cannot delete a global attribute.\n"
                + "Must be removed from global attribute properties.",
            "error",
            JOptionPane.ERROR_MESSAGE);
      }
    }
  }// GEN-LAST:event_TPDeleteActionPerformed

  // GEN-FIRST:event_TPNewActionPerformed
  private void TPNewActionPerformed(java.awt.event.ActionEvent evt) {
    ObjAttribute newObj = new ObjAttribute("", "", EnumVisibility.NO, "", "",
        Color.black, "", "");
    trans.getAttributeList().addLast(newObj);
    TPTable.revalidate();
  }// GEN-LAST:event_TPNewActionPerformed

  // GEN-BEGIN:variables
  // Variables declaration - do not modify
  private javax.swing.JButton TPCancel;
  private javax.swing.JButton TPDelete;
  private javax.swing.JLabel TPLabel;
  private javax.swing.JButton TPNew;
  private javax.swing.JButton TPOK;
  private javax.swing.JScrollPane TPScroll;
  private javax.swing.JTable TPTable;
  private javax.swing.JComboBox jComboBox1;
  private javax.swing.JComboBox jComboBox2;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JCheckBox jCheckBox1;
  // End of variables declaration//GEN-END:variables

}